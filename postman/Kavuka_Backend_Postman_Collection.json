{
  "info": {
    "name": "Kavuka Gemini Backend API",
    "description": "Complete API collection for Kavuka Tech's Gemini-style backend system",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "mobile_number",
      "value": "+1-234-567-8900",
      "type": "string"
    },
    {
      "key": "otp_code",
      "value": "",
      "type": "string"
    },
    {
      "key": "chatroom_id",
      "value": "1",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Send OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"mobile_number\": \"{{mobile_number}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/send-otp",
              "host": ["{{base_url}}"],
              "path": ["auth", "send-otp"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.otp) {",
                  "        pm.collectionVariables.set('otp_code', response.data.otp);",
                  "        console.log('‚úÖ OTP saved:', response.data.otp);",
                  "        console.log('‚ö†Ô∏è IMPORTANT: Copy this OTP and use it in the Verify OTP request');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "response": []
        },
        {
          "name": "Verify OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"mobile_number\": \"{{mobile_number}}\",\n  \"otp\": \"{{otp_code}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/verify-otp",
              "host": ["{{base_url}}"],
              "path": ["auth", "verify-otp"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.token) {",
                  "        pm.collectionVariables.set('auth_token', response.data.token);",
                  "        console.log('‚úÖ Token saved:', response.data.token);",
                  "        console.log('üéâ Authentication successful! You can now use other endpoints.');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "response": []
        },
        {
          "name": "Signup",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"mobile_number\": \"{{mobile_number}}\",\n  \"name\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/signup",
              "host": ["{{base_url}}"],
              "path": ["auth", "signup"]
            }
          },
          "response": []
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"mobile_number\": \"{{mobile_number}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/forgot-password",
              "host": ["{{base_url}}"],
              "path": ["auth", "forgot-password"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.otp) {",
                  "        pm.collectionVariables.set('otp_code', response.data.otp);",
                  "        console.log('Password reset OTP saved:', response.data.otp);",
                  "        console.log('‚ö†Ô∏è IMPORTANT: Use this OTP to verify password reset');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "response": []
        },
        {
          "name": "Set Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"new_password\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/set-password",
              "host": ["{{base_url}}"],
              "path": ["auth", "set-password"]
            }
          },
          "response": []
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"current_password\": \"password123\",\n  \"new_password\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/change-password",
              "host": ["{{base_url}}"],
              "path": ["auth", "change-password"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/user/me",
              "host": ["{{base_url}}"],
              "path": ["user", "me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ User profile retrieved successfully');",
                  "    console.log('User ID:', response.data.user.id);",
                  "    console.log('Subscription Tier:', response.data.user.subscription_tier);",
                  "}"
                ]
              }
            }
          ],
          "response": []
        }
      ]
    },
    {
      "name": "Chatroom Management",
      "item": [
        {
          "name": "Create Chatroom",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Chatroom\",\n  \"description\": \"A test chatroom for API testing\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/chatroom",
              "host": ["{{base_url}}"],
              "path": ["chatroom"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.chatroom) {",
                  "        pm.collectionVariables.set('chatroom_id', response.data.chatroom.id.toString());",
                  "        console.log('‚úÖ Chatroom created successfully');",
                  "        console.log('Chatroom ID:', response.data.chatroom.id);",
                  "        console.log('Chatroom Name:', response.data.chatroom.name);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "response": []
        },
        {
          "name": "Get All Chatrooms",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/chatroom",
              "host": ["{{base_url}}"],
              "path": ["chatroom"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Chatrooms retrieved successfully');",
                  "    console.log('Total chatrooms:', response.data.count);",
                  "    if (response.data.chatrooms.length > 0) {",
                  "        pm.collectionVariables.set('chatroom_id', response.data.chatrooms[0].id.toString());",
                  "        console.log('First chatroom ID set to:', response.data.chatrooms[0].id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "response": []
        },
        {
          "name": "Get Chatroom Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/chatroom/{{chatroom_id}}",
              "host": ["{{base_url}}"],
              "path": ["chatroom", "{{chatroom_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Chatroom details retrieved successfully');",
                  "    console.log('Chatroom Name:', response.data.chatroom.name);",
                  "    console.log('Message Count:', response.data.chatroom.message_count);",
                  "}"
                ]
              }
            }
          ],
          "response": []
        },
        {
          "name": "Send Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"Hello, this is a test message!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/chatroom/{{chatroom_id}}/message",
              "host": ["{{base_url}}"],
              "path": ["chatroom", "{{chatroom_id}}", "message"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Message sent successfully');",
                  "    console.log('Message ID:', response.data.message_id);",
                  "    console.log('Status:', response.data.status);",
                  "}"
                ]
              }
            }
          ],
          "response": []
        },
        {
          "name": "Get Messages",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/chatroom/{{chatroom_id}}/messages?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["chatroom", "{{chatroom_id}}", "messages"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Messages retrieved successfully');",
                  "    console.log('Total messages:', response.data.pagination.count);",
                  "    console.log('Page:', response.data.pagination.page);",
                  "}"
                ]
              }
            }
          ],
          "response": []
        }
      ]
    },
    {
      "name": "Subscription Management",
      "item": [
        {
          "name": "Get Subscription Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/subscribe/status",
              "host": ["{{base_url}}"],
              "path": ["subscribe", "status"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Subscription status retrieved');",
                  "    console.log('Tier:', response.data.subscription_tier);",
                  "    console.log('Status:', response.data.subscription_status);",
                  "}"
                ]
              }
            }
          ],
          "response": []
        },
        {
          "name": "Create Pro Subscription",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/subscribe/pro",
              "host": ["{{base_url}}"],
              "path": ["subscribe", "pro"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Pro subscription created successfully');",
                  "    console.log('Checkout URL:', response.data.checkout_url);",
                  "}"
                ]
              }
            }
          ],
          "response": []
        }
      ]
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('‚úÖ Health check passed');",
                  "    console.log('Server is running and healthy');",
                  "}"
                ]
              }
            }
          ],
          "response": []
        }
      ]
    }
  ]
}
